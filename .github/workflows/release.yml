name: Release and Publish

on:
  release:
    types: [published]

jobs:
  publish-pypi:
    name: Publish Python packages to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for trusted publishing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build and publish gil-flow
        run: |
          cd gil-py/
          python -m build
          twine upload dist/* --verbose
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and publish gil-node-openai
        run: |
          cd gil-py/nodes/gil-node-openai/
          python -m build
          twine upload dist/* --verbose
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and publish gil-node-text
        run: |
          cd gil-py/nodes/gil-node-text/
          python -m build
          twine upload dist/* --verbose
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and publish gil-node-data
        run: |
          cd gil-py/nodes/gil-node-data/
          python -m build
          twine upload dist/* --verbose
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}

  publish-docker:
    name: Publish Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: publish-pypi # Run after PyPI publishing succeeds

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: iyulab/gil-flow-py

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./gil-py/gil-flow
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}