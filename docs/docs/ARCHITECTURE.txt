1:"$Sreact.fragment"
2:I[6874,["6874","static/chunks/6874-6ca4feef1c5e2050.js","8974","static/chunks/app/page-42071eb7779b7d55.js"],""]
3:I[87555,[],""]
4:I[31295,[],""]
6:I[59665,[],"OutletBoundary"]
9:I[74911,[],"AsyncMetadataOutlet"]
b:I[59665,[],"ViewportBoundary"]
d:I[59665,[],"MetadataBoundary"]
f:I[26614,[],""]
:HL["/gil/_next/static/css/243801450fb246ae.css","style"]
:HL["/gil/_next/static/css/ec6ab958af97b9c3.css","style"]
0:{"P":null,"b":"EqdrA9h25eb_LgB3tEDxF","p":"/gil","c":["","docs","ARCHITECTURE"],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","ARCHITECTURE","oc"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/gil/_next/static/css/243801450fb246ae.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__className_983901","children":[["$","header",null,{"className":"bg-gray-800 text-white p-4 shadow-md","children":["$","nav",null,{"className":"container mx-auto flex justify-between items-center","children":[["$","$L2",null,{"href":"/","className":"text-2xl font-bold","children":"Gil-Flow"}],["$","ul",null,{"className":"flex space-x-4","children":["$","li",null,{"children":[["$","$L2",null,{"href":"/docs","className":"hover:text-blue-400 transition-colors","children":"Docs"}],["$","$L2",null,{"href":"https://github.com/iyulab/gil","className":"hover:text-blue-400 transition-colors ml-4","children":"GitHub"}]]}]}]]}]}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"bg-gray-800 text-white p-4 text-center text-sm mt-auto","children":["© ",2025," iyulab. All rights reserved."]}]]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","ARCHITECTURE","oc"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",[["$","link","0",{"rel":"stylesheet","href":"/gil/_next/static/css/ec6ab958af97b9c3.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L6",null,{"children":["$L7","$L8",["$","$L9",null,{"promise":"$@a"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","N9o76TVfA07H8DXR3dTefv",{"children":[["$","$Lb",null,{"children":"$Lc"}],null]}],["$","$Ld",null,{"children":"$Le"}]]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[74911,[],"AsyncMetadata"]
13:I[52099,["6249","static/chunks/cb15b0f3-2afaac53bf45f539.js","6874","static/chunks/6874-6ca4feef1c5e2050.js","6822","static/chunks/6822-2958c995e5aaa32a.js","7870","static/chunks/app/docs/%5B%5B...slug%5D%5D/page-8ea8e9f2adedb049.js"],"default"]
14:I[5278,["6249","static/chunks/cb15b0f3-2afaac53bf45f539.js","6874","static/chunks/6874-6ca4feef1c5e2050.js","6822","static/chunks/6822-2958c995e5aaa32a.js","7870","static/chunks/app/docs/%5B%5B...slug%5D%5D/page-8ea8e9f2adedb049.js"],"default"]
e:["$","div",null,{"hidden":true,"children":["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]}]
15:T123e,# Gil 아키텍처 가이드

언어 중립적 아키텍처와 구현체 간 호환성을 설명합니다.

> **참고**: YAML 문법은 [YAML_SPEC.md](YAML_SPEC.md), 노드 사양은 [NODE_SPEC.md](NODE_SPEC.md) 참조

## 아키텍처 개요

```mermaid
graph TD
    A[Gil-Flow YAML] --> B[YAML Parser]
    B --> C[Node Factory]
    C --> D[Workflow Engine]
    D --> E[Node Execution]
    E --> F[Context Management]
    F --> G[Result Output]
    
    H[Core Nodes] --> C
    I[Extension Nodes] --> C
    
    J[Environment Variables] --> B
    K[Node References] --> B
    
    style A fill:#e1f5fe
    style G fill:#c8e6c9
    style H fill:#fff3e0
    style I fill:#fce4ec
```

## 노드 아키텍처: 코어 vs 확장

Gil의 노드는 **코어(Core)**와 **확장(Extension)**의 두 가지 유형으로 분류되어 모듈성과 확장성을 보장합니다.

### 1. 코어 노드 (`gil-py` 내장)

워크플로우의 기본적인 구조를 제어하고 범용적인 기능을 수행하는 노드입니다. `gil-py` SDK에 직접 포함되어 별도의 설치가 필요 없습니다.

- **특징**: 외부 라이브러리 의존성 최소화, 모든 워크플로우에서 사용될 수 있는 보편성.
- **하위 분류**:
    - **제어 노드 (`Control-`)**: 워크플로우의 실행 흐름을 제어합니다. (예: `Control-Branch`, `Control-Loop`)
    - **유틸리티 노드 (`Util-`)**: 기본적인 데이터 조작 및 디버깅을 지원합니다. (예: `Util-SetVariable`, `Util-LogMessage`)

### 2. 확장 노드 (`gil-node-*` 패키지)

특정 외부 서비스(AI, DB, API 등)와 연동하거나 무거운 의존성을 가진 전문화된 기능을 수행하는 노드입니다. 각각 독립적인 PyPI 패키지로 제공됩니다.

- **특징**: 특정 외부 라이브러리 의존성, 선택적 기능, 명확한 도메인 전문성.
- **명명 규칙**: `{Domain}-{Action}` 형태를 따릅니다. (예: `OpenAI-GenerateImage`, `AWS-S3Upload`, `DB-Query`)

이 구조를 통해 사용자는 필요한 기능의 노드 패키지만 선택적으로 설치하여 `gil-py` 코어의 경량성을 유지할 수 있습니다.

## 핵심 구성 요소

### 1. YAML 파서
- Gil-Flow YAML → 내부 워크플로우 객체
- 환경 변수 치환 (`${VAR}`)
- 노드 참조 해석 (`@node.output`)

### 2. 노드 팩토리
- 타입 기반 노드 인스턴스 생성
- 동적 설정 주입
- 의존성 해결

### 3. 실행 엔진
- 의존성 기반 실행 순서 결정
- 병렬 실행 지원
- 에러 전파 및 재시도

### 4. 커넥터 시스템
- 외부 서비스 연동 (OpenAI, Database 등)
- 연결 풀링 및 관리
- 인증 및 보안

## 구현체별 특징

### gil-py (Python) ✅
- **현재 상태**: MVP 완성
- **강점**: AI/ML 생태계, 빠른 프로토타이핑
- **주요 사용처**: 데이터 분석, AI 워크플로우

### gil-sharp (C#) 🚧
- **목표**: 엔터프라이즈급 성능
- **강점**: .NET 생태계, Azure 통합
- **주요 사용처**: 엔터프라이즈 시스템, 고성능 처리

### gil-node (Node.js) 🚧
- **목표**: 웹 통합과 실시간 처리
- **강점**: 비동기 I/O, 웹 생태계
- **주요 사용처**: 웹 서비스, 실시간 스트림 처리

## 표준 호환성

### YAML 문법 호환성
모든 구현체는 동일한 Gil-Flow YAML을 해석하고 실행해야 합니다.

### 노드 인터페이스 호환성
표준 노드 타입은 모든 구현체에서 동일한 입출력 인터페이스를 제공해야 합니다.

### 확장성 보장
각 구현체는 언어별 특화 노드를 추가할 수 있되, 표준 노드의 동작은 일관성을 유지해야 합니다.

## 확장 가이드

### 새 노드 타입 추가
1. [NODE_SPEC.md](NODE_SPEC.md)에 표준 정의 추가
2. 각 구현체에서 인터페이스 구현
3. 테스트 및 문서화

### 새 구현체 개발
1. 표준 아키텍처 패턴 따름
2. YAML 파서 구현
3. 표준 노드 타입 구현
4. 호환성 테스트

### 커넥터 확장
1. 표준 커넥터 인터페이스 정의
2. 언어별 구현
3. 인증 및 설정 표준화

## 설계 원칙

### 언어 중립성
- Gil-Flow YAML은 언어에 독립적
- 표준 노드 인터페이스 유지
- 크로스 플랫폼 호환성

### 자기완결성  
- 각 노드는 독립적으로 작동
- 명확한 입출력 인터페이스
- 외부 의존성 최소화

### 확장성
- 새 노드 타입 추가 용이
- 플러그인 아키텍처 지원
- 언어별 특화 기능 허용

### 성능
- 비동기 실행 지원
- 병렬 처리 최적화
- 리소스 효율적 관리

---

*구현체별 상세 가이드는 [DEV.md](DEV.md)를 참조하세요.*
5:["$","div",null,{"className":"flex h-screen","children":[["$","$L13",null,{"currentSlug":["ARCHITECTURE"],"docTree":[{"name":"Overview","slug":["OVERVIEW"],"path":"D:\\data\\gil\\docs-content\\OVERVIEW.md","isFolder":false},{"name":"YAML Specification","slug":["YAML_SPEC"],"path":"D:\\data\\gil\\docs-content\\YAML_SPEC.md","isFolder":false},{"name":"Node Specification","slug":["NODE_SPEC"],"path":"D:\\data\\gil\\docs-content\\NODE_SPEC.md","isFolder":false},{"name":"Architecture","slug":["ARCHITECTURE"],"path":"D:\\data\\gil\\docs-content\\ARCHITECTURE.md","isFolder":false},{"name":"Development Guide","slug":["DEV"],"path":"D:\\data\\gil\\docs-content\\DEV.md","isFolder":false},{"name":"Context System","slug":["CONTEXT_SYSTEM"],"path":"D:\\data\\gil\\docs-content\\CONTEXT_SYSTEM.md","isFolder":false},{"name":"Nodes","slug":["nodes"],"path":"D:\\data\\gil\\docs-content\\nodes","isFolder":true,"children":[{"name":"Overview","slug":["nodes","README"],"path":"D:\\data\\gil\\docs-content\\nodes\\README.md","isFolder":false},{"name":"AITextGeneration","slug":["nodes","AITextGeneration"],"path":"D:\\data\\gil\\docs-content\\nodes\\AITextGeneration.md","isFolder":false},{"name":"ControlBranch","slug":["nodes","ControlBranch"],"path":"D:\\data\\gil\\docs-content\\nodes\\ControlBranch.md","isFolder":false},{"name":"DataReadFile","slug":["nodes","DataReadFile"],"path":"D:\\data\\gil\\docs-content\\nodes\\DataReadFile.md","isFolder":false},{"name":"GilConnectorOpenAI","slug":["nodes","GilConnectorOpenAI"],"path":"D:\\data\\gil\\docs-content\\nodes\\GilConnectorOpenAI.md","isFolder":false},{"name":"GilGenImage","slug":["nodes","GilGenImage"],"path":"D:\\data\\gil\\docs-content\\nodes\\GilGenImage.md","isFolder":false},{"name":"TransformData","slug":["nodes","TransformData"],"path":"D:\\data\\gil\\docs-content\\nodes\\TransformData.md","isFolder":false},{"name":"UtilLogMessage","slug":["nodes","UtilLogMessage"],"path":"D:\\data\\gil\\docs-content\\nodes\\UtilLogMessage.md","isFolder":false},{"name":"UtilSetVariable","slug":["nodes","UtilSetVariable"],"path":"D:\\data\\gil\\docs-content\\nodes\\UtilSetVariable.md","isFolder":false}]}]}],["$","div",null,{"className":"flex-1 overflow-y-auto p-8 prose dark:prose-invert","children":["$","$L14",null,{"htmlContent":"$15"}]}]]}]
8:null
c:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
a:{"metadata":[["$","title","0",{"children":"Gil-Flow"}],["$","meta","1",{"name":"description","content":"A powerful workflow automation engine."}],["$","link","2",{"rel":"icon","href":"/gil/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
12:{"metadata":"$a:metadata","error":null,"digest":"$undefined"}
